--#Scripts#: Identifying the Longest Running Queries in Your Database
SELECT TOP 10 PERCENT 
    o.name AS 'Object Name',
	qs.total_elapsed_time / qs.execution_count / 1000.0 AS 'Average Seconds',
    qs.total_elapsed_time / 1000.0 AS 'Total Seconds',
    total_physical_reads AS'Physical Reads',
    total_logical_reads AS 'Logical Reads',
	qs.execution_count AS 'Count',
    SUBSTRING (qt.text,qs.statement_start_offset/2, 
         (CASE WHEN qs.statement_end_offset = -1 
            THEN LEN(CONVERT(NVARCHAR(MAX), qt.text)) * 2 
          ELSE qs.statement_end_offset END - qs.statement_start_offset)/2) AS 'Query',
	DB_NAME(qt.dbid) AS 'Database',
	last_execution_time AS 'Last Executed',
	@@ServerName AS 'Server Name'
  FROM sys.dm_exec_query_stats qs
    CROSS APPLY sys.dm_exec_sql_text(qs.sql_handle) as qt
    LEFT OUTER JOIN sys.objects o ON qt.objectid = o.object_id
where qt.dbid = DB_ID()
  ORDER BY 'Average Seconds' DESC;

--#Scripts#: Currently long running transactions:
SELECT
	r.session_id
,	r.start_time
,	TotalElapsedTime_ms = r.total_elapsed_time
,	r.[status]
,	r.command
,	DatabaseName = DB_Name(r.database_id)
,	r.wait_type
,	r.last_wait_type
,	r.wait_resource
,	r.cpu_time
,	r.reads
,	r.writes
,	r.logical_reads
,	t.[text] AS [executing batch]
,	SUBSTRING(
				t.[text], r.statement_start_offset / 2, 
				(	CASE WHEN r.statement_end_offset = -1 THEN DATALENGTH (t.[text]) 
						 ELSE r.statement_end_offset 
					END - r.statement_start_offset ) / 2 
			 ) AS [executing statement] 
,	p.query_plan
FROM
	sys.dm_exec_requests r
CROSS APPLY
	sys.dm_exec_sql_text(r.sql_handle) AS t
CROSS APPLY	
	sys.dm_exec_query_plan(r.plan_handle) AS p
ORDER BY 
	r.total_elapsed_time DESC;
